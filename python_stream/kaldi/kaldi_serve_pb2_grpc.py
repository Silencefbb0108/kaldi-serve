# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from .kaldi_serve_pb2 import (
  RecognizeRequest,
  RecognizeResponse
)


class KaldiServeStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Recognize = channel.stream_unary(
        '/kaldi_serve.KaldiServe/Recognize',
        request_serializer=RecognizeRequest.SerializeToString,
        response_deserializer=RecognizeResponse.FromString,
        )


class KaldiServeServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Recognize(self, request_iterator, context):
    """Performs synchronous client-to-server streaming speech recognition: 
    receive results after all audio has been streamed and processed.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_KaldiServeServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Recognize': grpc.stream_unary_rpc_method_handler(
          servicer.Recognize,
          request_deserializer=RecognizeRequest.FromString,
          response_serializer=RecognizeResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'kaldi_serve.KaldiServe', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
